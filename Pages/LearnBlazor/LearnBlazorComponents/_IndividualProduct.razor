<div class="bg-light col-5 border m-1" @onclick="(args)=>LastSelectedProduct(args,Product.Name)">
	<h4 class="text-secondary">Product - @Product.Id</h4>
	<input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorite<br /><br />
	Name - @Product.Name <br />
	Show Properties :
	<input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />

	@if (Product.IsActive)
	{
		@foreach (var prodProp in Product.ProductProperties)
		{
			<p>@prodProp.Key - @prodProp.Value</p>
		}
	}
	<br />
	<_EditDeleteButton IsActive="@Product.IsActive">
	</_EditDeleteButton>
</div>

@code {

	[Parameter]
	public Product Product { get; set; }

	[Parameter]
	public EventCallback<bool> onFavoriteUpdated { get; set; }

	[Parameter]
	public EventCallback<string> onLastSelectedProductUpdated { get; set; }

	private async Task FavoriteUpdated(ChangeEventArgs e)
	{
		await onFavoriteUpdated.InvokeAsync((bool)e.Value);
	}

	private async Task LastSelectedProduct(MouseEventArgs e, string name)
	{
		await onLastSelectedProductUpdated.InvokeAsync(name);
	}

}
